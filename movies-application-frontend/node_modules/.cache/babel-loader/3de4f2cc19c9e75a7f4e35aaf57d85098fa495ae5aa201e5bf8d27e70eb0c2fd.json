{"ast":null,"code":"var _jsxFileName = \"/Users/lawrenceawe/Software Institute/MoviesApplication/movies-application-frontend/src/FilmAddComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst filmAttributes = [{\n  name: 'title',\n  placeholder: 'Title',\n  type: 'text'\n}, {\n  name: 'description',\n  placeholder: 'Description',\n  type: 'text'\n}, {\n  name: 'releaseYear',\n  placeholder: 'Release Year',\n  type: 'number'\n},\n// or type: 'number' if you prefer a numeric input\n{\n  name: 'languageId',\n  placeholder: 'Language ID',\n  type: 'text'\n}, {\n  name: 'originalLanguageId',\n  placeholder: 'Original Language ID',\n  type: 'text'\n}, {\n  name: 'rentalDuration',\n  placeholder: 'Rental Duration',\n  type: 'number'\n}, {\n  name: 'rentalRate',\n  placeholder: 'Rental Rate',\n  type: 'number'\n}, {\n  name: 'length',\n  placeholder: 'Length',\n  type: 'number'\n}, {\n  name: 'replacementCost',\n  placeholder: 'Replacement Cost',\n  type: 'text'\n},\n// or type: 'number' if replacementCost is always numeric\n{\n  name: 'rating',\n  placeholder: 'Rating',\n  type: 'text'\n}, {\n  name: 'specialFeatures',\n  placeholder: 'Special Features',\n  type: 'text'\n} // assuming a comma-separated list for simplicity; a more advanced UI would be needed for set-like behavior\n];\n\nfunction FilmAddComponent(props) {\n  _s();\n  const [film, setFilm] = useState({\n    title: \"\",\n    description: \"\",\n    releaseYear: \"\",\n    languageId: \"\",\n    originalLanguageId: \"\",\n    rentalDuration: null,\n    rentalRate: null,\n    length: null,\n    replacementCost: null,\n    rating: \"\",\n    specialFeatures: new Set()\n  });\n  const handleChange = e => {\n    const {\n      attributeName: fieldName,\n      value\n    } = e.target;\n    setFilm(prevFilm => ({\n      ...prevFilm,\n      [fieldName]: value\n    }));\n  };\n  const addFilm = async () => {\n    try {\n      const response = await fetch('/films/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(film)\n      });\n      if (response.ok) {\n        alert(\"Film added successfully\");\n      } else {\n        alert(\"Failed to add film\");\n      }\n    } catch (error) {\n      console.error(\"Error adding film:\", error);\n      alert(\"Error adding film\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [filmAttributes.map(attr => /*#__PURE__*/_jsxDEV(\"input\", {\n      type: attr.type,\n      name: attr.name,\n      value: film[attr.name],\n      onChange: handleChange,\n      placeholder: attr.placeholder\n    }, attr.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addFilm,\n      children: \"Add Film\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(FilmAddComponent, \"V0eezncZLbscCWOtCQthRBeYdmI=\");\n_c = FilmAddComponent;\nexport default FilmAddComponent;\nvar _c;\n$RefreshReg$(_c, \"FilmAddComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","filmAttributes","name","placeholder","type","FilmAddComponent","props","_s","film","setFilm","title","description","releaseYear","languageId","originalLanguageId","rentalDuration","rentalRate","length","replacementCost","rating","specialFeatures","Set","handleChange","e","attributeName","fieldName","value","target","prevFilm","addFilm","response","fetch","method","headers","body","JSON","stringify","ok","alert","error","console","children","map","attr","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/lawrenceawe/Software Institute/MoviesApplication/movies-application-frontend/src/FilmAddComponent.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst filmAttributes = [\n    { name: 'title', placeholder: 'Title', type: 'text' },\n    { name: 'description', placeholder: 'Description', type: 'text' },\n    { name: 'releaseYear', placeholder: 'Release Year', type: 'number' }, // or type: 'number' if you prefer a numeric input\n    { name: 'languageId', placeholder: 'Language ID', type: 'text' },\n    { name: 'originalLanguageId', placeholder: 'Original Language ID', type: 'text' },\n    { name: 'rentalDuration', placeholder: 'Rental Duration', type: 'number' },\n    { name: 'rentalRate', placeholder: 'Rental Rate', type: 'number' }, \n    { name: 'length', placeholder: 'Length', type: 'number' },\n    { name: 'replacementCost', placeholder: 'Replacement Cost', type: 'text' }, // or type: 'number' if replacementCost is always numeric\n    { name: 'rating', placeholder: 'Rating', type: 'text' },\n    { name: 'specialFeatures', placeholder: 'Special Features', type: 'text' }, // assuming a comma-separated list for simplicity; a more advanced UI would be needed for set-like behavior\n  ];\n\nfunction FilmAddComponent(props) {\n    const [film, setFilm] = useState({\n        title: \"\",\n        description: \"\",\n        releaseYear: \"\",\n        languageId: \"\",\n        originalLanguageId: \"\",\n        rentalDuration: null, \n        rentalRate: null, \n        length: null,\n        replacementCost: null,\n        rating: \"\",\n        specialFeatures: new Set(),\n      });\n\n  const handleChange = (e) => {\n    const { attributeName: fieldName, value } = e.target;\n    setFilm(prevFilm => ({ ...prevFilm, [fieldName]: value }));\n  };\n\n  const addFilm = async () => {\n    try {\n      const response = await fetch('/films/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(film),\n      });\n\n      if (response.ok) {\n        alert(\"Film added successfully\");\n      } else {\n        alert(\"Failed to add film\");\n      }\n    } catch (error) {\n      console.error(\"Error adding film:\", error);\n      alert(\"Error adding film\");\n    }\n  };\n\n  return (\n    <div>\n      {filmAttributes.map(attr => (\n        <input\n          key={attr.name}\n          type={attr.type}\n          name={attr.name}\n          value={film[attr.name]}\n          onChange={handleChange}\n          placeholder={attr.placeholder}\n        />\n      ))}\n      <button onClick={addFilm}>Add Film</button>\n    </div>\n  );\n}\n\nexport default FilmAddComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}