{"ast":null,"code":"var _jsxFileName = \"/Users/lawrenceawe/Software Institute/MoviesApplication/movies-application-frontend/src/FilmAddComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FilmAddComponent(props) {\n  _s();\n  // Create states for each film attribute you want to capture\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  // Continue for other fields...\n\n  const addFilm = async () => {\n    try {\n      const film = {\n        title,\n        description\n        // Add other fields...\n      };\n\n      const response = await fetch(`http://localhost:8080/films/${title}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(film)\n      });\n      if (response.ok) {\n        alert(\"Film added successfully\");\n      } else {\n        alert(\"Failed to add film\");\n      }\n    } catch (error) {\n      console.error(\"Error adding film:\", error);\n      alert(\"Error adding film\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      placeholder: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addFilm,\n      children: \"Add Film\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(FilmAddComponent, \"/6NNF0FwJJsXLHIYvDErymUSBps=\");\n_c = FilmAddComponent;\nexport default FilmAddComponent;\nvar _c;\n$RefreshReg$(_c, \"FilmAddComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FilmAddComponent","props","_s","title","setTitle","description","setDescription","addFilm","film","response","fetch","method","headers","body","JSON","stringify","ok","alert","error","console","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/lawrenceawe/Software Institute/MoviesApplication/movies-application-frontend/src/FilmAddComponent.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction FilmAddComponent(props) {\n  // Create states for each film attribute you want to capture\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  // Continue for other fields...\n\n  const addFilm = async () => {\n    try {\n      const film = {\n        title,\n        description\n        // Add other fields...\n      };\n\n      const response = await fetch(`http://localhost:8080/films/${title}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(film),\n      });\n\n      if (response.ok) {\n        alert(\"Film added successfully\");\n      } else {\n        alert(\"Failed to add film\");\n      }\n    } catch (error) {\n      console.error(\"Error adding film:\", error);\n      alert(\"Error adding film\");\n    }\n  };\n\n  return (\n    <div>\n      <input \n        type=\"text\" \n        value={title} \n        onChange={(e) => setTitle(e.target.value)} \n        placeholder=\"Title\"\n      />\n      <input \n        type=\"text\" \n        value={description} \n        onChange={(e) => setDescription(e.target.value)} \n        placeholder=\"Description\"\n      />\n      {/* Add other input fields... */}\n      <button onClick={addFilm}>Add Film</button>\n    </div>\n  );\n}\n\nexport default FilmAddComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,gBAAgBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC/B;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAElD;;EAEA,MAAMU,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAMC,IAAI,GAAG;QACXL,KAAK;QACLE;QACA;MACF,CAAC;;MAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BP,KAAM,EAAC,EAAE;QACnEQ,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;MAC3B,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACO,EAAE,EAAE;QACfC,KAAK,CAAC,yBAAyB,CAAC;MAClC,CAAC,MAAM;QACLA,KAAK,CAAC,oBAAoB,CAAC;MAC7B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1CD,KAAK,CAAC,mBAAmB,CAAC;IAC5B;EACF,CAAC;EAED,oBACElB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEnB,KAAM;MACboB,QAAQ,EAAGC,CAAC,IAAKpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,WAAW,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACF/B,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEjB,WAAY;MACnBkB,QAAQ,EAAGC,CAAC,IAAKlB,cAAc,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAChDI,WAAW,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAEF/B,OAAA;MAAQgC,OAAO,EAAExB,OAAQ;MAAAa,QAAA,EAAC;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;AAAC5B,EAAA,CApDQF,gBAAgB;AAAAgC,EAAA,GAAhBhC,gBAAgB;AAsDzB,eAAeA,gBAAgB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}